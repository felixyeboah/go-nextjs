basePath: /api/v1
definitions:
  internal_handler_auth.ErrorResponse:
    properties:
      error:
        example: Invalid input
        type: string
      message:
        example: Email is required
        type: string
    type: object
  internal_handler_auth.LoginRequest:
    properties:
      email:
        example: user@example.com
        type: string
      password:
        example: securepassword123
        type: string
    type: object
  internal_handler_auth.LoginResponse:
    properties:
      access_token:
        example: eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9...
        type: string
      expires_in:
        example: 3600
        type: integer
      refresh_token:
        example: eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9...
        type: string
    type: object
  internal_handler_auth.LogoutRequest:
    properties:
      refresh_token:
        example: eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9...
        type: string
    type: object
  internal_handler_auth.LogoutResponse:
    properties:
      message:
        example: Logout successful
        type: string
    type: object
  internal_handler_auth.RefreshTokenRequest:
    properties:
      refresh_token:
        example: eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9...
        type: string
    type: object
  internal_handler_auth.RefreshTokenResponse:
    properties:
      access_token:
        example: eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9...
        type: string
      expires_in:
        example: 3600
        type: integer
      refresh_token:
        example: eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9...
        type: string
    type: object
  internal_handler_auth.RegisterRequest:
    properties:
      email:
        example: user@example.com
        type: string
      first_name:
        example: John
        type: string
      last_name:
        example: Doe
        type: string
      password:
        example: securepassword123
        type: string
    type: object
  internal_handler_auth.RegisterResponse:
    properties:
      email:
        example: user@example.com
        type: string
      first_name:
        example: John
        type: string
      id:
        example: 123e4567-e89b-12d3-a456-426614174000
        type: string
      last_name:
        example: Doe
        type: string
    type: object
  internal_handler_auth.ResetPasswordRequest:
    properties:
      new_password:
        example: newsecurepassword123
        type: string
      token:
        example: eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9...
        type: string
    type: object
  internal_handler_auth.ResetPasswordResponse:
    properties:
      message:
        example: Password reset successful
        type: string
    type: object
  internal_handler_auth.VerifyEmailRequest:
    properties:
      token:
        example: eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9...
        type: string
    type: object
  internal_handler_auth.VerifyEmailResponse:
    properties:
      message:
        example: Email verified successfully
        type: string
    type: object
  internal_handler_user.ChangePasswordRequest:
    properties:
      current_password:
        example: currentsecurepassword123
        type: string
      new_password:
        example: newsecurepassword123
        type: string
    type: object
  internal_handler_user.ChangePasswordResponse:
    properties:
      message:
        example: Password changed successfully
        type: string
    type: object
  internal_handler_user.DeleteAccountResponse:
    properties:
      message:
        example: Account deleted successfully
        type: string
    type: object
  internal_handler_user.ErrorResponse:
    properties:
      error:
        example: Invalid input
        type: string
      message:
        example: Current password is incorrect
        type: string
    type: object
  internal_handler_user.UpdateProfileRequest:
    properties:
      first_name:
        example: John
        type: string
      last_name:
        example: Doe
        type: string
    type: object
  internal_handler_user.UserProfileResponse:
    properties:
      created_at:
        example: "2023-01-01T12:00:00Z"
        type: string
      email:
        example: user@example.com
        type: string
      first_name:
        example: John
        type: string
      id:
        example: 123e4567-e89b-12d3-a456-426614174000
        type: string
      last_name:
        example: Doe
        type: string
      updated_at:
        example: "2023-01-02T12:00:00Z"
        type: string
    type: object
host: localhost:8080
info:
  contact: {}
  description: A modern fullstack application with Go and Next.js
  title: Fullstack API
  version: "1.0"
paths:
  /api/v1/auth/login:
    post:
      consumes:
      - application/json
      description: Authenticate a user and return tokens
      parameters:
      - description: Login credentials
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/internal_handler_auth.LoginRequest'
      produces:
      - application/json
      responses:
        "200":
          description: Login successful
          schema:
            $ref: '#/definitions/internal_handler_auth.LoginResponse'
        "400":
          description: Invalid input
          schema:
            $ref: '#/definitions/internal_handler_auth.ErrorResponse'
        "401":
          description: Invalid credentials
          schema:
            $ref: '#/definitions/internal_handler_auth.ErrorResponse'
        "500":
          description: Server error
          schema:
            $ref: '#/definitions/internal_handler_auth.ErrorResponse'
      summary: Login a user
      tags:
      - auth
  /api/v1/auth/logout:
    post:
      consumes:
      - application/json
      description: Invalidate the user's tokens
      parameters:
      - description: Logout request
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/internal_handler_auth.LogoutRequest'
      produces:
      - application/json
      responses:
        "200":
          description: Logout successful
          schema:
            $ref: '#/definitions/internal_handler_auth.LogoutResponse'
        "400":
          description: Invalid input
          schema:
            $ref: '#/definitions/internal_handler_auth.ErrorResponse'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/internal_handler_auth.ErrorResponse'
        "500":
          description: Server error
          schema:
            $ref: '#/definitions/internal_handler_auth.ErrorResponse'
      summary: Logout a user
      tags:
      - auth
  /api/v1/auth/refresh:
    post:
      consumes:
      - application/json
      description: Refresh access token using refresh token
      parameters:
      - description: Refresh token
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/internal_handler_auth.RefreshTokenRequest'
      produces:
      - application/json
      responses:
        "200":
          description: Token refreshed successfully
          schema:
            $ref: '#/definitions/internal_handler_auth.RefreshTokenResponse'
        "400":
          description: Invalid input
          schema:
            $ref: '#/definitions/internal_handler_auth.ErrorResponse'
        "401":
          description: Invalid token
          schema:
            $ref: '#/definitions/internal_handler_auth.ErrorResponse'
        "500":
          description: Server error
          schema:
            $ref: '#/definitions/internal_handler_auth.ErrorResponse'
      summary: Refresh authentication tokens
      tags:
      - auth
  /api/v1/auth/register:
    post:
      consumes:
      - application/json
      description: Register a new user with email and password
      parameters:
      - description: Registration details
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/internal_handler_auth.RegisterRequest'
      produces:
      - application/json
      responses:
        "201":
          description: User registered successfully
          schema:
            $ref: '#/definitions/internal_handler_auth.RegisterResponse'
        "400":
          description: Invalid input
          schema:
            $ref: '#/definitions/internal_handler_auth.ErrorResponse'
        "500":
          description: Server error
          schema:
            $ref: '#/definitions/internal_handler_auth.ErrorResponse'
      summary: Register a new user
      tags:
      - auth
  /api/v1/auth/reset-password:
    post:
      consumes:
      - application/json
      description: Reset a user's password using a token
      parameters:
      - description: Password reset details
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/internal_handler_auth.ResetPasswordRequest'
      produces:
      - application/json
      responses:
        "200":
          description: Password reset successful
          schema:
            $ref: '#/definitions/internal_handler_auth.ResetPasswordResponse'
        "400":
          description: Invalid input
          schema:
            $ref: '#/definitions/internal_handler_auth.ErrorResponse'
        "401":
          description: Invalid token
          schema:
            $ref: '#/definitions/internal_handler_auth.ErrorResponse'
        "500":
          description: Server error
          schema:
            $ref: '#/definitions/internal_handler_auth.ErrorResponse'
      summary: Reset user password
      tags:
      - auth
  /api/v1/auth/verify-email:
    post:
      consumes:
      - application/json
      description: Verify a user's email address using a token
      parameters:
      - description: Email verification token
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/internal_handler_auth.VerifyEmailRequest'
      produces:
      - application/json
      responses:
        "200":
          description: Email verified successfully
          schema:
            $ref: '#/definitions/internal_handler_auth.VerifyEmailResponse'
        "400":
          description: Invalid input
          schema:
            $ref: '#/definitions/internal_handler_auth.ErrorResponse'
        "401":
          description: Invalid token
          schema:
            $ref: '#/definitions/internal_handler_auth.ErrorResponse'
        "500":
          description: Server error
          schema:
            $ref: '#/definitions/internal_handler_auth.ErrorResponse'
      summary: Verify user email
      tags:
      - auth
  /api/v1/users/account:
    delete:
      consumes:
      - application/json
      description: Delete the current user's account
      produces:
      - application/json
      responses:
        "200":
          description: Account deleted successfully
          schema:
            $ref: '#/definitions/internal_handler_user.DeleteAccountResponse'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/internal_handler_user.ErrorResponse'
        "500":
          description: Server error
          schema:
            $ref: '#/definitions/internal_handler_user.ErrorResponse'
      security:
      - BearerAuth: []
      summary: Delete user account
      tags:
      - users
  /api/v1/users/change-password:
    post:
      consumes:
      - application/json
      description: Change the current user's password
      parameters:
      - description: Password change details
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/internal_handler_user.ChangePasswordRequest'
      produces:
      - application/json
      responses:
        "200":
          description: Password changed successfully
          schema:
            $ref: '#/definitions/internal_handler_user.ChangePasswordResponse'
        "400":
          description: Invalid input
          schema:
            $ref: '#/definitions/internal_handler_user.ErrorResponse'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/internal_handler_user.ErrorResponse'
        "500":
          description: Server error
          schema:
            $ref: '#/definitions/internal_handler_user.ErrorResponse'
      security:
      - BearerAuth: []
      summary: Change user password
      tags:
      - users
  /api/v1/users/profile:
    get:
      consumes:
      - application/json
      description: Get the current user's profile
      produces:
      - application/json
      responses:
        "200":
          description: User profile
          schema:
            $ref: '#/definitions/internal_handler_user.UserProfileResponse'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/internal_handler_user.ErrorResponse'
        "500":
          description: Server error
          schema:
            $ref: '#/definitions/internal_handler_user.ErrorResponse'
      security:
      - BearerAuth: []
      summary: Get user profile
      tags:
      - users
    put:
      consumes:
      - application/json
      description: Update the current user's profile
      parameters:
      - description: Profile update details
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/internal_handler_user.UpdateProfileRequest'
      produces:
      - application/json
      responses:
        "200":
          description: Updated profile
          schema:
            $ref: '#/definitions/internal_handler_user.UserProfileResponse'
        "400":
          description: Invalid input
          schema:
            $ref: '#/definitions/internal_handler_user.ErrorResponse'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/internal_handler_user.ErrorResponse'
        "500":
          description: Server error
          schema:
            $ref: '#/definitions/internal_handler_user.ErrorResponse'
      security:
      - BearerAuth: []
      summary: Update user profile
      tags:
      - users
swagger: "2.0"
